---
openapi: 3.0.1
info:
  title: Products Management API
  version: v1
consumes:
- application/json
produces:
- application/json
components:
  schemas:
    product:
      type: object
      properties:
        title:
          type: string
        category:
          type: string
        rating:
          type: integer
          format: int32
        price:
          type: string
    new_product:
      type: object
      properties:
        product:
          "$ref": "#/components/schemas/product"
          required:
          - title
          - category
          - price
    general_error:
      type: object
      required:
      - status
      - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
responses:
  GeneralError:
    description: General Error
    content:
      application/json:
        schema:
          "$ref": "#/components/schemas/general_error"
paths:
  "/products":
    get:
      summary: List Products
      description: Returns a list of products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              example:
              - id: 789
                title: Heavy Duty Marble Chair
                category: Copper
                rating: 4
                price: '9876.0'
                created_at: '2021-04-26T05:10:06.011Z'
                updated_at: '2021-04-26T05:10:06.011Z'
              - id: 790
                title: Fantastic Linen Bottle
                category: Iron
                rating: 4
                price: '8603.0'
                created_at: '2021-04-26T05:10:06.013Z'
                updated_at: '2021-04-26T05:10:06.013Z'
    post:
      summary: Create product
      operationId: createProduct
      description: Creates a product
      parameters: []
      responses:
        '201':
          description: A valid product to be created
          content:
            application/json:
              example:
                id: 791
                title: Mediocre Leather Pants
                category: Silk
                rating: 3
                price: '1550.0'
                created_at: '2021-04-26T05:10:06.033Z'
                updated_at: '2021-04-26T05:10:06.033Z'
              schema:
                "$ref": "#/components/schemas/product"
        '422':
          description: An invalid product
          content:
            application/json:
              example:
                errors:
                  title:
                  - can't be blank
                  category:
                  - can't be blank
                  price:
                  - can't be blank
                  - is not a number
              schema:
                "$ref": "#/components/schemas/errors_object"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_product"
  "/products/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show product
      responses:
        '200':
          description: A product
          content:
            application/json:
              example:
                id: 792
                title: Rustic Aluminum Bag
                category: Copper
                rating: 5
                price: '5919.0'
                created_at: '2021-04-26T05:10:06.054Z'
                updated_at: '2021-04-26T05:10:06.054Z'
              schema:
                "$ref": "#/components/schemas/product"
        '404':
          description: Product not found
          content:
            application/json:
              example:
                message: Couldn't find Product with 'id'=42
                status: 404
              schema:
                "$ref": "#/components/schemas/general_error"
    patch:
      summary: Update product
      parameters: []
      responses:
        '204':
          description: A product
        '422':
          description: An invalid product
          content:
            application/json:
              example:
                errors:
                  title:
                  - can't be blank
                  category:
                  - can't be blank
                  price:
                  - can't be blank
                  - is not a number
              schema:
                "$ref": "#/components/schemas/errors_object"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/general_error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_product"
    put:
      summary: update product
      parameters: []
      responses:
        '204':
          description: successful
        '422':
          description: An invalid product
          content:
            application/json:
              example:
                errors:
                  title:
                  - can't be blank
                  category:
                  - can't be blank
                  price:
                  - can't be blank
                  - is not a number
              schema:
                "$ref": "#/components/schemas/errors_object"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/general_error"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_product"
    delete:
      summary: delete product
      responses:
        '204':
          description: successful
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/general_error"
